{"ast":null,"code":"var _jsxFileName = \"/home/excalibur/Documents/Jaagr/Bhaav/frontend/src/components/EmotionLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionLibrary = () => {\n  _s();\n  const [emotions, setEmotions] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/emotions').then(response => response.json()).then(data => setEmotions(data)).catch(error => console.error('Error fetching emotions:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: emotions.map(emotion => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          margin: '10px',\n          padding: '10px',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: emotion.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: emotion.image,\n          alt: emotion.name,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: emotion.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/test/${emotion.id}`,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Take Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/story/${emotion.id}`,\n            children: \"Story\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, emotion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionLibrary, \"KHnR97S+No2PD6ZjI7eUpDgUWw0=\");\n_c = EmotionLibrary;\nexport default EmotionLibrary;\nvar _c;\n$RefreshReg$(_c, \"EmotionLibrary\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","EmotionLibrary","_s","emotions","setEmotions","fetch","then","response","json","data","catch","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","emotion","border","borderRadius","margin","width","name","src","image","alt","description","to","id","marginRight","_c","$RefreshReg$"],"sources":["/home/excalibur/Documents/Jaagr/Bhaav/frontend/src/components/EmotionLibrary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst EmotionLibrary = () => {\n  const [emotions, setEmotions] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/emotions')\n      .then(response => response.json())\n      .then(data => setEmotions(data))\n      .catch(error => console.error('Error fetching emotions:', error));\n  }, []);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Emotion Library</h1>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {emotions.map(emotion => (\n          <div\n            key={emotion.id}\n            style={{\n              border: '1px solid #ccc',\n              borderRadius: '5px',\n              margin: '10px',\n              padding: '10px',\n              width: '200px'\n            }}\n          >\n            <h3>{emotion.name}</h3>\n            <img src={emotion.image} alt={emotion.name} style={{ width: '100%' }} />\n            <p>{emotion.description}</p>\n            <div>\n              <Link to={`/test/${emotion.id}`} style={{ marginRight: '10px' }}>Take Test</Link>\n              <Link to={`/story/${emotion.id}`}>Story</Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmotionLibrary;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAKa,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAN,QAAA,EAC/CZ,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACnBvB,OAAA;QAEEa,KAAK,EAAE;UACLW,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,MAAM;UACdZ,OAAO,EAAE,MAAM;UACfa,KAAK,EAAE;QACT,CAAE;QAAAZ,QAAA,gBAEFf,OAAA;UAAAe,QAAA,EAAKQ,OAAO,CAACK;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBnB,OAAA;UAAK6B,GAAG,EAAEN,OAAO,CAACO,KAAM;UAACC,GAAG,EAAER,OAAO,CAACK,IAAK;UAACf,KAAK,EAAE;YAAEc,KAAK,EAAE;UAAO;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxEnB,OAAA;UAAAe,QAAA,EAAIQ,OAAO,CAACS;QAAW;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BnB,OAAA;UAAAe,QAAA,gBACEf,OAAA,CAACF,IAAI;YAACmC,EAAE,EAAE,SAASV,OAAO,CAACW,EAAE,EAAG;YAACrB,KAAK,EAAE;cAAEsB,WAAW,EAAE;YAAO,CAAE;YAAApB,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjFnB,OAAA,CAACF,IAAI;YAACmC,EAAE,EAAE,UAAUV,OAAO,CAACW,EAAE,EAAG;YAAAnB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA,GAfDI,OAAO,CAACW,EAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCID,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}